from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa

revision: str = 'c199def8c4f9'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('role_permissions', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.Column('registered_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('hashed_password', sa.String(length=1024), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('balance', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_foreign_key(None, 'basket', 'user', ['user_id'], ['id'])
    op.create_foreign_key(None, 'comment', 'user', ['user_id'], ['id'])
    op.create_foreign_key(None, 'oauth_account', 'user', ['user_id'], ['id'], ondelete='cascade')
    op.create_foreign_key(None, 'order', 'user', ['seller_id'], ['id'])
    op.create_foreign_key(None, 'order', 'user', ['buyer_id'], ['id'])
    op.create_foreign_key(None, 'product', 'user', ['seller_id'], ['id'])
    op.create_foreign_key(None, 'repost', 'user', ['to_user'], ['id'], use_alter=True)
    op.create_foreign_key(None, 'repost', 'user', ['user_id'], ['id'], use_alter=True)
    op.create_foreign_key(None, 'review', 'user', ['user_id'], ['id'])
    op.create_foreign_key(None, 'video', 'user', ['user_id'], ['id'])
    # ### end Alembic commands ###

    op.execute(
        """
    INSERT INTO role (name, role_permissions)
    VALUES
        ('GUEST', '["get_reviews", "view_site"]'),
        ('SELLER', '["create_product", "delete_product"]'),
        ('BUYER', '["buy_product", "add_review", "get_reviews"]'),
        ('ADMIN', '["manage_users", "manage_roles", "manage_products"]');
        """
    )

    # Additional upgrade statements for other tables if needed
    # ...


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'video', type_='foreignkey')
    op.drop_constraint(None, 'review', type_='foreignkey')
    op.drop_constraint(None, 'repost', type_='foreignkey')
    op.drop_constraint(None, 'repost', type_='foreignkey')
    op.drop_constraint(None, 'product', type_='foreignkey')
    op.drop_constraint(None, 'order', type_='foreignkey')
    op.drop_constraint(None, 'order', type_='foreignkey')
    op.drop_constraint(None, 'oauth_account', type_='foreignkey')
    op.drop_constraint(None, 'comment', type_='foreignkey')
    op.drop_constraint(None, 'basket', type_='foreignkey')
    op.drop_table('user')
    op.drop_table('role')
    # ### end Alembic commands ###

    op.execute(
        """
        DELETE FROM role
        WHERE name IN ('GUEST', 'SELLER', 'BUYER', 'ADMIN');
        """
    )
